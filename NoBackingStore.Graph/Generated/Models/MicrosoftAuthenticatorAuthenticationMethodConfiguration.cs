// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace NoBackingStore.Graph.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MicrosoftAuthenticatorAuthenticationMethodConfiguration : global::NoBackingStore.Graph.Models.AuthenticationMethodConfiguration, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>A collection of Microsoft Authenticator settings such as application context and location context, and whether they are enabled for all users or specific users only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::NoBackingStore.Graph.Models.MicrosoftAuthenticatorFeatureSettings? FeatureSettings { get; set; }
#nullable restore
#else
        public global::NoBackingStore.Graph.Models.MicrosoftAuthenticatorFeatureSettings FeatureSettings { get; set; }
#endif
        /// <summary>A collection of groups that are enabled to use the authentication method. Expanded by default.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::NoBackingStore.Graph.Models.MicrosoftAuthenticatorAuthenticationMethodTarget>? IncludeTargets { get; set; }
#nullable restore
#else
        public List<global::NoBackingStore.Graph.Models.MicrosoftAuthenticatorAuthenticationMethodTarget> IncludeTargets { get; set; }
#endif
        /// <summary>The isSoftwareOathEnabled property</summary>
        public bool? IsSoftwareOathEnabled { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::NoBackingStore.Graph.Models.MicrosoftAuthenticatorAuthenticationMethodConfiguration"/> and sets the default values.
        /// </summary>
        public MicrosoftAuthenticatorAuthenticationMethodConfiguration() : base()
        {
            OdataType = "#microsoft.graph.microsoftAuthenticatorAuthenticationMethodConfiguration";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::NoBackingStore.Graph.Models.MicrosoftAuthenticatorAuthenticationMethodConfiguration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::NoBackingStore.Graph.Models.MicrosoftAuthenticatorAuthenticationMethodConfiguration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::NoBackingStore.Graph.Models.MicrosoftAuthenticatorAuthenticationMethodConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "featureSettings", n => { FeatureSettings = n.GetObjectValue<global::NoBackingStore.Graph.Models.MicrosoftAuthenticatorFeatureSettings>(global::NoBackingStore.Graph.Models.MicrosoftAuthenticatorFeatureSettings.CreateFromDiscriminatorValue); } },
                { "includeTargets", n => { IncludeTargets = n.GetCollectionOfObjectValues<global::NoBackingStore.Graph.Models.MicrosoftAuthenticatorAuthenticationMethodTarget>(global::NoBackingStore.Graph.Models.MicrosoftAuthenticatorAuthenticationMethodTarget.CreateFromDiscriminatorValue)?.AsList(); } },
                { "isSoftwareOathEnabled", n => { IsSoftwareOathEnabled = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::NoBackingStore.Graph.Models.MicrosoftAuthenticatorFeatureSettings>("featureSettings", FeatureSettings);
            writer.WriteCollectionOfObjectValues<global::NoBackingStore.Graph.Models.MicrosoftAuthenticatorAuthenticationMethodTarget>("includeTargets", IncludeTargets);
            writer.WriteBoolValue("isSoftwareOathEnabled", IsSoftwareOathEnabled);
        }
    }
}
#pragma warning restore CS0618
