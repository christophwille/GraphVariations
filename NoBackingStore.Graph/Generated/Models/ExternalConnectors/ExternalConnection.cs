// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace NoBackingStore.Graph.Models.ExternalConnectors
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ExternalConnection : global::NoBackingStore.Graph.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Collects configurable settings related to activities involving connector content.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::NoBackingStore.Graph.Models.ExternalConnectors.ActivitySettings? ActivitySettings { get; set; }
#nullable restore
#else
        public global::NoBackingStore.Graph.Models.ExternalConnectors.ActivitySettings ActivitySettings { get; set; }
#endif
        /// <summary>Specifies additional application IDs that are allowed to manage the connection and to index content in the connection. Optional.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::NoBackingStore.Graph.Models.ExternalConnectors.Configuration? Configuration { get; set; }
#nullable restore
#else
        public global::NoBackingStore.Graph.Models.ExternalConnectors.Configuration Configuration { get; set; }
#endif
        /// <summary>The Teams app ID. Optional.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConnectorId { get; set; }
#nullable restore
#else
        public string ConnectorId { get; set; }
#endif
        /// <summary>Description of the connection displayed in the Microsoft 365 admin center. Optional.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The groups property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::NoBackingStore.Graph.Models.ExternalConnectors.ExternalGroup>? Groups { get; set; }
#nullable restore
#else
        public List<global::NoBackingStore.Graph.Models.ExternalConnectors.ExternalGroup> Groups { get; set; }
#endif
        /// <summary>The items property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::NoBackingStore.Graph.Models.ExternalConnectors.ExternalItem>? Items { get; set; }
#nullable restore
#else
        public List<global::NoBackingStore.Graph.Models.ExternalConnectors.ExternalItem> Items { get; set; }
#endif
        /// <summary>The display name of the connection to be displayed in the Microsoft 365 admin center. Maximum length of 128 characters. Required.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The operations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::NoBackingStore.Graph.Models.ExternalConnectors.ConnectionOperation>? Operations { get; set; }
#nullable restore
#else
        public List<global::NoBackingStore.Graph.Models.ExternalConnectors.ConnectionOperation> Operations { get; set; }
#endif
        /// <summary>The schema property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::NoBackingStore.Graph.Models.ExternalConnectors.Schema? Schema { get; set; }
#nullable restore
#else
        public global::NoBackingStore.Graph.Models.ExternalConnectors.Schema Schema { get; set; }
#endif
        /// <summary>The settings configuring the search experience for content in this connection, such as the display templates for search results.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::NoBackingStore.Graph.Models.ExternalConnectors.SearchSettings? SearchSettings { get; set; }
#nullable restore
#else
        public global::NoBackingStore.Graph.Models.ExternalConnectors.SearchSettings SearchSettings { get; set; }
#endif
        /// <summary>Indicates the current state of the connection. Possible values are: draft, ready, obsolete, limitExceeded, unknownFutureValue.</summary>
        public global::NoBackingStore.Graph.Models.ExternalConnectors.ConnectionState? State { get; private set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::NoBackingStore.Graph.Models.ExternalConnectors.ExternalConnection"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::NoBackingStore.Graph.Models.ExternalConnectors.ExternalConnection CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::NoBackingStore.Graph.Models.ExternalConnectors.ExternalConnection();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "activitySettings", n => { ActivitySettings = n.GetObjectValue<global::NoBackingStore.Graph.Models.ExternalConnectors.ActivitySettings>(global::NoBackingStore.Graph.Models.ExternalConnectors.ActivitySettings.CreateFromDiscriminatorValue); } },
                { "configuration", n => { Configuration = n.GetObjectValue<global::NoBackingStore.Graph.Models.ExternalConnectors.Configuration>(global::NoBackingStore.Graph.Models.ExternalConnectors.Configuration.CreateFromDiscriminatorValue); } },
                { "connectorId", n => { ConnectorId = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "groups", n => { Groups = n.GetCollectionOfObjectValues<global::NoBackingStore.Graph.Models.ExternalConnectors.ExternalGroup>(global::NoBackingStore.Graph.Models.ExternalConnectors.ExternalGroup.CreateFromDiscriminatorValue)?.AsList(); } },
                { "items", n => { Items = n.GetCollectionOfObjectValues<global::NoBackingStore.Graph.Models.ExternalConnectors.ExternalItem>(global::NoBackingStore.Graph.Models.ExternalConnectors.ExternalItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "operations", n => { Operations = n.GetCollectionOfObjectValues<global::NoBackingStore.Graph.Models.ExternalConnectors.ConnectionOperation>(global::NoBackingStore.Graph.Models.ExternalConnectors.ConnectionOperation.CreateFromDiscriminatorValue)?.AsList(); } },
                { "schema", n => { Schema = n.GetObjectValue<global::NoBackingStore.Graph.Models.ExternalConnectors.Schema>(global::NoBackingStore.Graph.Models.ExternalConnectors.Schema.CreateFromDiscriminatorValue); } },
                { "searchSettings", n => { SearchSettings = n.GetObjectValue<global::NoBackingStore.Graph.Models.ExternalConnectors.SearchSettings>(global::NoBackingStore.Graph.Models.ExternalConnectors.SearchSettings.CreateFromDiscriminatorValue); } },
                { "state", n => { State = n.GetEnumValue<global::NoBackingStore.Graph.Models.ExternalConnectors.ConnectionState>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::NoBackingStore.Graph.Models.ExternalConnectors.ActivitySettings>("activitySettings", ActivitySettings);
            writer.WriteObjectValue<global::NoBackingStore.Graph.Models.ExternalConnectors.Configuration>("configuration", Configuration);
            writer.WriteStringValue("connectorId", ConnectorId);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfObjectValues<global::NoBackingStore.Graph.Models.ExternalConnectors.ExternalGroup>("groups", Groups);
            writer.WriteCollectionOfObjectValues<global::NoBackingStore.Graph.Models.ExternalConnectors.ExternalItem>("items", Items);
            writer.WriteStringValue("name", Name);
            writer.WriteCollectionOfObjectValues<global::NoBackingStore.Graph.Models.ExternalConnectors.ConnectionOperation>("operations", Operations);
            writer.WriteObjectValue<global::NoBackingStore.Graph.Models.ExternalConnectors.Schema>("schema", Schema);
            writer.WriteObjectValue<global::NoBackingStore.Graph.Models.ExternalConnectors.SearchSettings>("searchSettings", SearchSettings);
        }
    }
}
#pragma warning restore CS0618
