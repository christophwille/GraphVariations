// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace NoBackingStore.Graph.Models
{
    /// <summary>
    /// Import windows autopilot devices using upload.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ImportedWindowsAutopilotDeviceIdentityUpload : global::NoBackingStore.Graph.Models.Entity, IParsable
    {
        /// <summary>DateTime when the entity is created.</summary>
        public DateTimeOffset? CreatedDateTimeUtc { get; set; }
        /// <summary>Collection of all Autopilot devices as a part of this upload.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::NoBackingStore.Graph.Models.ImportedWindowsAutopilotDeviceIdentity>? DeviceIdentities { get; set; }
#nullable restore
#else
        public List<global::NoBackingStore.Graph.Models.ImportedWindowsAutopilotDeviceIdentity> DeviceIdentities { get; set; }
#endif
        /// <summary>The status property</summary>
        public global::NoBackingStore.Graph.Models.ImportedWindowsAutopilotDeviceIdentityUploadStatus? Status { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::NoBackingStore.Graph.Models.ImportedWindowsAutopilotDeviceIdentityUpload"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::NoBackingStore.Graph.Models.ImportedWindowsAutopilotDeviceIdentityUpload CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::NoBackingStore.Graph.Models.ImportedWindowsAutopilotDeviceIdentityUpload();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "createdDateTimeUtc", n => { CreatedDateTimeUtc = n.GetDateTimeOffsetValue(); } },
                { "deviceIdentities", n => { DeviceIdentities = n.GetCollectionOfObjectValues<global::NoBackingStore.Graph.Models.ImportedWindowsAutopilotDeviceIdentity>(global::NoBackingStore.Graph.Models.ImportedWindowsAutopilotDeviceIdentity.CreateFromDiscriminatorValue)?.AsList(); } },
                { "status", n => { Status = n.GetEnumValue<global::NoBackingStore.Graph.Models.ImportedWindowsAutopilotDeviceIdentityUploadStatus>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteDateTimeOffsetValue("createdDateTimeUtc", CreatedDateTimeUtc);
            writer.WriteCollectionOfObjectValues<global::NoBackingStore.Graph.Models.ImportedWindowsAutopilotDeviceIdentity>("deviceIdentities", DeviceIdentities);
            writer.WriteEnumValue<global::NoBackingStore.Graph.Models.ImportedWindowsAutopilotDeviceIdentityUploadStatus>("status", Status);
        }
    }
}
#pragma warning restore CS0618
