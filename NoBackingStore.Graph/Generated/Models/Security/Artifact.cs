// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace NoBackingStore.Graph.Models.Security
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Artifact : global::NoBackingStore.Graph.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::NoBackingStore.Graph.Models.Security.Artifact"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::NoBackingStore.Graph.Models.Security.Artifact CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.security.host" => new global::NoBackingStore.Graph.Models.Security.Host(),
                "#microsoft.graph.security.hostComponent" => new global::NoBackingStore.Graph.Models.Security.HostComponent(),
                "#microsoft.graph.security.hostCookie" => new global::NoBackingStore.Graph.Models.Security.HostCookie(),
                "#microsoft.graph.security.hostname" => new global::NoBackingStore.Graph.Models.Security.Hostname(),
                "#microsoft.graph.security.hostSslCertificate" => new global::NoBackingStore.Graph.Models.Security.HostSslCertificate(),
                "#microsoft.graph.security.hostTracker" => new global::NoBackingStore.Graph.Models.Security.HostTracker(),
                "#microsoft.graph.security.ipAddress" => new global::NoBackingStore.Graph.Models.Security.IpAddress(),
                "#microsoft.graph.security.passiveDnsRecord" => new global::NoBackingStore.Graph.Models.Security.PassiveDnsRecord(),
                "#microsoft.graph.security.sslCertificate" => new global::NoBackingStore.Graph.Models.Security.SslCertificate(),
                "#microsoft.graph.security.unclassifiedArtifact" => new global::NoBackingStore.Graph.Models.Security.UnclassifiedArtifact(),
                _ => new global::NoBackingStore.Graph.Models.Security.Artifact(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
        }
    }
}
#pragma warning restore CS0618
